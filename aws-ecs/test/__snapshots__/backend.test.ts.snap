// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Created 1`] = `
{
  "Outputs": {
    "MyTestBackendClusterNameE66AC51F": {
      "Value": {
        "Ref": "MyTestBackendECSClusterD1C89047",
      },
    },
    "MyTestBackendServiceArn9DF3BC94": {
      "Value": {
        "Ref": "MyTestBackendServiceE381563D",
      },
    },
    "MyTestBackendServiceLoadBalancerDNS4A6080B8": {
      "Value": {
        "Fn::GetAtt": [
          "MyTestBackendServiceLB9548A941",
          "DNSName",
        ],
      },
    },
    "MyTestBackendServiceServiceURL5C837BAF": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "MyTestBackendServiceLB9548A941",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "MyTestBackendARecordD47E249E": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "MyTestBackendServiceLB9548A941",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "MyTestBackendServiceLB9548A941",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "app-api.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "MyTestBackendAgentTargetsGRPCGroup6ACE64FE": {
      "Properties": {
        "HealthCheckPath": "/helloworld.Greeter/SayHello",
        "HealthCheckPort": "50051",
        "HealthCheckProtocol": "HTTP",
        "Port": 50051,
        "Protocol": "HTTP",
        "ProtocolVersion": "GRPC",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyTestBackendCertificateCertificateRequestorFunction9CF7EACA": {
      "DependsOn": [
        "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3F68C11E",
        "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleFC9915F4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleFC9915F4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3F68C11E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.app-api.example.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3F68C11E",
        "Roles": [
          {
            "Ref": "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleFC9915F4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyTestBackendCertificateCertificateRequestorFunctionServiceRoleFC9915F4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestBackendCertificateCertificateRequestorResource6C144387": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "app-api.example.com",
        "HostedZoneId": "DUMMY",
        "ServiceToken": {
          "Fn::GetAtt": [
            "MyTestBackendCertificateCertificateRequestorFunction9CF7EACA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestBackendECSClusterD1C89047": {
      "Type": "AWS::ECS::Cluster",
    },
    "MyTestBackendECSExecutionRole247C121B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestBackendECSExecutionRoleDefaultPolicyC6444DB7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyTestBackendECSTaskfindyagencycoreLogGroup3E5C5D6E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:us-east-1:123456789012:secret:FindyAgency-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyTestBackendECSTaskfindyagencyvaultLogGroupCEC62381",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyTestBackendECSTaskfindyagencyauthLogGroupDFE9F70D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyTestBackendECSExecutionRoleDefaultPolicyC6444DB7",
        "Roles": [
          {
            "Ref": "MyTestBackendECSExecutionRole247C121B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyTestBackendECSLoadBalancerVpc57B44F2B": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "MyTestBackendECSLoadBalancerVpcIGWC99FB8ED": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet1DefaultRoute9E754D17": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1NATGatewayF53A02EF",
        },
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1RouteTableD9EE3CEB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet1RouteTableAssociation9EEC4CD6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1RouteTableD9EE3CEB",
        },
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet1RouteTableD9EE3CEB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet2DefaultRoute8A11931E": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1NATGatewayF53A02EF",
        },
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2RouteTableD132BBD5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet2RouteTableAssociation4D462D68": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2RouteTableD132BBD5",
        },
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet2RouteTableD132BBD5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1DefaultRoute0B445013": {
      "DependsOn": [
        "MyTestBackendECSLoadBalancerVpcVPCGW21A0C7CB",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcIGWC99FB8ED",
        },
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTable84FFC010",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1EIP3F41EB5E": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1NATGatewayF53A02EF": {
      "DependsOn": [
        "MyTestBackendECSLoadBalancerVpcPublicSubnet1DefaultRoute0B445013",
        "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTableAssociation49AFFB46",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyTestBackendECSLoadBalancerVpcPublicSubnet1EIP3F41EB5E",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1Subnet8B416BD0",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTable84FFC010": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTableAssociation49AFFB46": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTable84FFC010",
        },
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1Subnet8B416BD0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet1Subnet8B416BD0": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet2DefaultRouteFE1E078D": {
      "DependsOn": [
        "MyTestBackendECSLoadBalancerVpcVPCGW21A0C7CB",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcIGWC99FB8ED",
        },
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet2RouteTable222F6190",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet2RouteTable222F6190": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet2RouteTableAssociation008B4DD1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet2RouteTable222F6190",
        },
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet2SubnetB97A46E1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyTestBackendECSLoadBalancerVpcPublicSubnet2SubnetB97A46E1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/MyTestBackendECSLoadBalancerVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyTestBackendECSLoadBalancerVpcVPCGW21A0C7CB": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcIGWC99FB8ED",
        },
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "MyTestBackendECSTask13F7F0B6": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "FCLI_AGENCY_HOST_PORT",
                "Value": "80",
              },
              {
                "Name": "FCLI_AGENCY_HOST_ADDRESS",
                "Value": "app-api.example.com",
              },
              {
                "Name": "FCLI_AGENCY_HOST_SCHEME",
                "Value": "https",
              },
              {
                "Name": "FCLI_LOGGING",
                "Value": "-logtostderr=true -v=6",
              },
              {
                "Name": "GENESIS_TRANSACTIONS",
                "Value": "genesis",
              },
              {
                "Name": "FCLI_IMPORT_WALLET_FILE",
                "Value": "",
              },
              {
                "Name": "FCLI_IMPORT_WALLET_NAME",
                "Value": "",
              },
              {
                "Name": "FCLI_POOL_GENESIS_TXN_FILE",
                "Value": "/agent/genesis_transactions",
              },
              {
                "Name": "FCLI_POOL_NAME",
                "Value": "findy",
              },
              {
                "Name": "FCLI_STEWARD_POOL_NAME",
                "Value": "findy",
              },
              {
                "Name": "FCLI_AGENCY_POOL_NAME",
                "Value": "FINDY_LEDGER,findy,FINDY_MEM_LEDGER,cache",
              },
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -f http://localhost:8080/ready || exit 1",
              ],
              "Interval": 30,
              "Retries": 10,
              "Timeout": 5,
            },
            "Image": "ghcr.io/findy-network/findy-agent",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyTestBackendECSTaskfindyagencycoreLogGroup3E5C5D6E",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "findy-agency-core",
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/root",
                "ReadOnly": false,
                "SourceVolume": "findy-agency-coreEFSVolume",
              },
            ],
            "Name": "findy-agency-core",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              {
                "ContainerPort": 50051,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "FCLI_STEWARD_WALLET_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-steward-wallet-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_STEWARD_WALLET_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-steward-wallet-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_STEWARD_DID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-steward-did::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_STEWARD_SEED",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-steward-seed::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_GRPC_JWT_SECRET",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-jwt-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_ADMIN_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-admin-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "FCLI_AGENCY_ENCLAVE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-enclave-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "findy-agency-core",
              },
            ],
            "Environment": [
              {
                "Name": "FAV_AGENCY_HOST",
                "Value": "localhost",
              },
              {
                "Name": "FAV_DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "MyTestBackendVaultRDS32FFE505",
                    "Endpoint.Address",
                  ],
                },
              },
              {
                "Name": "FAV_AGENCY_CERT_PATH",
                "Value": "",
              },
              {
                "Name": "FAV_AGENCY_INSECURE",
                "Value": "true",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/findy-network/findy-agent-vault",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyTestBackendECSTaskfindyagencyvaultLogGroupCEC62381",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "findy-agency-vault",
              },
            },
            "Name": "findy-agency-vault",
            "PortMappings": [
              {
                "ContainerPort": 8085,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "FAV_JWT_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-jwt-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FAV_AGENCY_ADMIN_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-admin-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "FAV_DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-db-password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "findy-agency-core",
              },
            ],
            "Environment": [
              {
                "Name": "FAA_AGENCY_ADDR",
                "Value": "localhost",
              },
              {
                "Name": "FAA_DOMAIN",
                "Value": "app.example.com",
              },
              {
                "Name": "FAA_ORIGIN",
                "Value": "https://app.example.com,android-origin",
              },
              {
                "Name": "FAA_CERT_PATH",
                "Value": "",
              },
              {
                "Name": "FAA_AGENCY_INSECURE",
                "Value": "true",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/findy-network/findy-agent-auth",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyTestBackendECSTaskfindyagencyauthLogGroupDFE9F70D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "findy-agency-auth",
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "findy-agency-authEFSVolume",
              },
            ],
            "Name": "findy-agency-auth",
            "PortMappings": [
              {
                "ContainerPort": 8888,
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "FAA_JWT_VERIFICATION_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-jwt-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FAA_SEC_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-sec-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "FAA_AGENCY_ADMIN_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:findy-agency-admin-id::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MyTestBackendECSExecutionRole247C121B",
            "Arn",
          ],
        },
        "Family": "MyTestStackMyTestBackendECSTaskD07AB3CF",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "MyTestBackendECSTaskRole499BB4F5",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "EFSVolumeConfiguration": {
              "FilesystemId": {
                "Ref": "findyagencycoreEFSEA647A5B",
              },
            },
            "Name": "findy-agency-coreEFSVolume",
          },
          {
            "EFSVolumeConfiguration": {
              "FilesystemId": {
                "Ref": "findyagencyauthEFSD273A2A6",
              },
            },
            "Name": "findy-agency-authEFSVolume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "MyTestBackendECSTaskRole499BB4F5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestBackendECSTaskfindyagencyauthLogGroupDFE9F70D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MyTestBackendECSTaskfindyagencycoreLogGroup3E5C5D6E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MyTestBackendECSTaskfindyagencyvaultLogGroupCEC62381": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MyTestBackendServiceE381563D": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
        "MyTestBackendServiceLBMyTestBackendGRPCListener17A87195",
        "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAgentECSHTTPSTargetRule53F96772",
        "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAuthECSHTTPSTargetRule6BE8ED15",
        "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendVaultECSHTTPSTargetRuleD4618BB3",
        "MyTestBackendServiceLBPublicListenerECSGroup6776F227",
        "MyTestBackendServiceLBPublicListener52E6BB3B",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "MyTestBackendECSClusterD1C89047",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "findy-agency-core",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBPublicListenerECSGroup6776F227",
            },
          },
          {
            "ContainerName": "findy-agency-core",
            "ContainerPort": 50051,
            "TargetGroupArn": {
              "Ref": "MyTestBackendAgentTargetsGRPCGroup6ACE64FE",
            },
          },
          {
            "ContainerName": "findy-agency-core",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAgentECSHTTPSTargetGroup9C0669A8",
            },
          },
          {
            "ContainerName": "findy-agency-auth",
            "ContainerPort": 8888,
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAuthECSHTTPSTargetGroup0264C113",
            },
          },
          {
            "ContainerName": "findy-agency-vault",
            "ContainerPort": 8085,
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendVaultECSHTTPSTargetGroup14415C5A",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MyTestBackendServiceSecurityGroup364D279C",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B",
              },
              {
                "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "MyTestBackendECSTask13F7F0B6",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "MyTestBackendServiceLB9548A941": {
      "DependsOn": [
        "MyTestBackendECSLoadBalancerVpcPublicSubnet1DefaultRoute0B445013",
        "MyTestBackendECSLoadBalancerVpcPublicSubnet1RouteTableAssociation49AFFB46",
        "MyTestBackendECSLoadBalancerVpcPublicSubnet2DefaultRouteFE1E078D",
        "MyTestBackendECSLoadBalancerVpcPublicSubnet2RouteTableAssociation008B4DD1",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          {
            "Key": "idle_timeout.timeout_seconds",
            "Value": "3600",
          },
        ],
        "Name": "LB",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyTestBackendServiceLBSecurityGroup8030668E",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet1Subnet8B416BD0",
          },
          {
            "Ref": "MyTestBackendECSLoadBalancerVpcPublicSubnet2SubnetB97A46E1",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "MyTestBackendServiceLBMyTestBackendGRPCListener17A87195": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::GetAtt": [
                "MyTestBackendCertificateCertificateRequestorResource6C144387",
                "Arn",
              ],
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MyTestBackendAgentTargetsGRPCGroup6ACE64FE",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "MyTestBackendServiceLB9548A941",
        },
        "Port": 50051,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListener4AB7E1DE": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::GetAtt": [
                "MyTestBackendCertificateCertificateRequestorResource6C144387",
                "Arn",
              ],
            },
          },
        ],
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "StatusCode": "404",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "MyTestBackendServiceLB9548A941",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAgentECSHTTPSTargetGroup9C0669A8": {
      "Properties": {
        "HealthCheckPath": "/",
        "HealthCheckPort": "8080",
        "HealthCheckProtocol": "HTTP",
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAgentECSHTTPSTargetRule53F96772": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAgentECSHTTPSTargetGroup9C0669A8",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/api/*",
                "/ca-api/*",
                "/ca-apiws/*",
                "/a2a/*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListener4AB7E1DE",
        },
        "Priority": 100,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAuthECSHTTPSTargetGroup0264C113": {
      "Properties": {
        "HealthCheckPath": "/",
        "HealthCheckPort": "8888",
        "HealthCheckProtocol": "HTTP",
        "Port": 8888,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAuthECSHTTPSTargetRule6BE8ED15": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendAuthECSHTTPSTargetGroup0264C113",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/register/*",
                "/login/*",
                "/attestation/*",
                "/assertion/*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListener4AB7E1DE",
        },
        "Priority": 99,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendVaultECSHTTPSTargetGroup14415C5A": {
      "Properties": {
        "HealthCheckPath": "/health",
        "HealthCheckPort": "8085",
        "HealthCheckProtocol": "HTTP",
        "Port": 8085,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendVaultECSHTTPSTargetRuleD4618BB3": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListenerMyTestBackendVaultECSHTTPSTargetGroup14415C5A",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/query*",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "MyTestBackendServiceLBMyTestBackendHTTPSListener4AB7E1DE",
        },
        "Priority": 98,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "MyTestBackendServiceLBPublicListener52E6BB3B": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MyTestBackendServiceLBPublicListenerECSGroup6776F227",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "MyTestBackendServiceLB9548A941",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "MyTestBackendServiceLBPublicListenerECSGroup6776F227": {
      "Properties": {
        "Port": 8080,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyTestBackendServiceLBSecurityGroup8030668E": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB MyTestStackMyTestBackendServiceLBDE78E383",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 50051",
            "FromPort": 50051,
            "IpProtocol": "tcp",
            "ToPort": 50051,
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MyTestBackendServiceLBSecurityGrouptoMyTestStackMyTestBackendServiceSecurityGroupC4B716FA443E8D5B2CF": {
      "Properties": {
        "Description": "to MyTestStackMyTestBackendServiceSecurityGroupC4B716FA:443",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyTestBackendServiceLBSecurityGrouptoMyTestStackMyTestBackendServiceSecurityGroupC4B716FA5005139F22C8D": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "FromPort": 50051,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 50051,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyTestBackendServiceLBSecurityGrouptoMyTestStackMyTestBackendServiceSecurityGroupC4B716FA8080203827D3": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyTestBackendServiceLBSecurityGrouptoMyTestStackMyTestBackendServiceSecurityGroupC4B716FA80853D7DFC2A": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "FromPort": 8085,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8085,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyTestBackendServiceLBSecurityGrouptoMyTestStackMyTestBackendServiceSecurityGroupC4B716FA88883A6D0190": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "FromPort": 8888,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8888,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyTestBackendServiceSecurityGroup364D279C": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "GroupDescription": "MyTestStack/MyTestBackendService/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MyTestBackendServiceSecurityGroupfromMyTestStackMyTestBackendServiceLBSecurityGroupE8447E1944327FECDD5": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "Description": "from MyTestStackMyTestBackendServiceLBSecurityGroupE8447E19:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendServiceSecurityGroupfromMyTestStackMyTestBackendServiceLBSecurityGroupE8447E1950051E3540DA1": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 50051,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "ToPort": 50051,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendServiceSecurityGroupfromMyTestStackMyTestBackendServiceLBSecurityGroupE8447E1980808D43E56C": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendServiceSecurityGroupfromMyTestStackMyTestBackendServiceLBSecurityGroupE8447E198085F019BF2B": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8085,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "ToPort": 8085,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendServiceSecurityGroupfromMyTestStackMyTestBackendServiceLBSecurityGroupE8447E198888F4ED204A": {
      "DependsOn": [
        "MyTestBackendECSTaskRole499BB4F5",
      ],
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8888,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceLBSecurityGroup8030668E",
            "GroupId",
          ],
        },
        "ToPort": 8888,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendVaultRDS32FFE505": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBName": "vault",
        "DBSubnetGroupName": {
          "Ref": "MyTestBackendVaultRDSSubnetGroupB931280F",
        },
        "Engine": "postgres",
        "EngineVersion": "16.1",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":secretsmanager:us-east-1:123456789012:secret:FindyAgency:SecretString:findy-agency-db-password::}}",
            ],
          ],
        },
        "MasterUsername": "postgres",
        "Port": "5432",
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyTestBackendVaultRDSSecurityGroupD68CB109",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestBackendVaultRDSSecurityGroupD68CB109": {
      "Properties": {
        "GroupDescription": "MyTestStack/MyTestBackendVaultRDSSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MyTestBackendVaultRDSSecurityGroupfromMyTestStackMyTestBackendServiceSecurityGroupC4B716FA5432DD0F542D": {
      "Properties": {
        "Description": "from MyTestStackMyTestBackendServiceSecurityGroupC4B716FA:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "MyTestBackendVaultRDSSecurityGroupD68CB109",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyTestBackendVaultRDSSubnetGroupB931280F": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for MyTestBackendVaultRDS database",
        "SubnetIds": [
          {
            "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B",
          },
          {
            "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "findyagencyauthEFSD273A2A6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/findy-agency-authEFS",
          },
        ],
        "LifecyclePolicies": [
          {
            "TransitionToIA": "AFTER_90_DAYS",
          },
        ],
        "PerformanceMode": "generalPurpose",
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "findyagencyauthEFSEfsMountTarget1FC157FA9": {
      "Properties": {
        "FileSystemId": {
          "Ref": "findyagencyauthEFSD273A2A6",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "findyagencyauthEFSSecurityGroupDC4829F7",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "findyagencyauthEFSEfsMountTarget2CCFE3F78": {
      "Properties": {
        "FileSystemId": {
          "Ref": "findyagencyauthEFSD273A2A6",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "findyagencyauthEFSSecurityGroupDC4829F7",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "findyagencyauthEFSSecurityGroupDC4829F7": {
      "Properties": {
        "GroupDescription": "MyTestStack/findy-agency-authEFSSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "findyagencyauthEFSSecurityGroupfromMyTestStackMyTestBackendServiceSecurityGroupC4B716FA2049A0A3EE1D": {
      "Properties": {
        "Description": "from MyTestStackMyTestBackendServiceSecurityGroupC4B716FA:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "findyagencyauthEFSSecurityGroupDC4829F7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "findyagencycoreEFSEA647A5B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/findy-agency-coreEFS",
          },
        ],
        "LifecyclePolicies": [
          {
            "TransitionToIA": "AFTER_90_DAYS",
          },
        ],
        "PerformanceMode": "generalPurpose",
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Delete",
    },
    "findyagencycoreEFSEfsMountTarget114167BA5": {
      "Properties": {
        "FileSystemId": {
          "Ref": "findyagencycoreEFSEA647A5B",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "findyagencycoreEFSSecurityGroupC949E676",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet1Subnet049EA92B",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "findyagencycoreEFSEfsMountTarget2D3D2F69A": {
      "Properties": {
        "FileSystemId": {
          "Ref": "findyagencycoreEFSEA647A5B",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "findyagencycoreEFSSecurityGroupC949E676",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "MyTestBackendECSLoadBalancerVpcPrivateSubnet2Subnet012A4F12",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "findyagencycoreEFSSecurityGroupC949E676": {
      "Properties": {
        "GroupDescription": "MyTestStack/findy-agency-coreEFSSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "MyTestBackendECSLoadBalancerVpc57B44F2B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "findyagencycoreEFSSecurityGroupfromMyTestStackMyTestBackendServiceSecurityGroupC4B716FA2049D687424C": {
      "Properties": {
        "Description": "from MyTestStackMyTestBackendServiceSecurityGroupC4B716FA:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "findyagencycoreEFSSecurityGroupC949E676",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyTestBackendServiceSecurityGroup364D279C",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
