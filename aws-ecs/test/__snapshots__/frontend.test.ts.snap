// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Frontend Created 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "e976a796f036a5efbf44b99e44cfb5a961df08d8dbf7cd37e60bf216fb982a00.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "MyTestFrontendMyTestFrontenddeploymentAwsCliLayerCBC876C2",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CLogRetention1948627D": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-east-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-123456789012-us-east-1/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MyTestFrontendMyTestFrontendbucketE6268FCD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MyTestFrontendMyTestFrontendbucketE6268FCD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "MyTestFrontendMyTestFrontendbucketE6268FCD",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyTestFrontendMyTestFrontendarecord2122C282": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "MyTestFrontendMyTestFrontenddistributionCFDistributionE6F8BA69",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "myapp.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "MyTestFrontendMyTestFrontendbucketAutoDeleteObjectsCustomResourceCDB9341B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "MyTestFrontendMyTestFrontendbucketPolicyEBF483A8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "MyTestFrontendMyTestFrontendbucketE6268FCD",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestFrontendMyTestFrontendbucketE6268FCD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "myapp.example.com",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:beb1c0d3",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestFrontendMyTestFrontendbucketPolicyEBF483A8": {
      "Properties": {
        "Bucket": {
          "Ref": "MyTestFrontendMyTestFrontendbucketE6268FCD",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MyTestFrontendMyTestFrontendbucketE6268FCD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MyTestFrontendMyTestFrontendbucketE6268FCD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "MyTestFrontendMyTestFrontendoriginaccessidentity60A8D7A4",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MyTestFrontendMyTestFrontendbucketE6268FCD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "MyTestFrontendMyTestFrontendoriginaccessidentity60A8D7A4",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::GetAtt": [
                  "MyTestFrontendMyTestFrontendbucketE6268FCD",
                  "Arn",
                ],
              },
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "MyTestFrontendMyTestFrontendoriginaccessidentity60A8D7A4",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MyTestFrontendMyTestFrontendbucketE6268FCD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunction822D86CA": {
      "DependsOn": [
        "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicy1719F132",
        "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRole586510A7",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRole586510A7",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRole586510A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicy1719F132": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.myapp.example.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicy1719F132",
        "Roles": [
          {
            "Ref": "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunctionServiceRole586510A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyTestFrontendMyTestFrontendcertificateCertificateRequestorResource3D675D18": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "myapp.example.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "MyTestFrontendMyTestFrontendcertificateCertificateRequestorFunction822D86CA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestFrontendMyTestFrontenddeploymentAwsCliLayerCBC876C2": {
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "MyTestFrontendMyTestFrontenddeploymentCustomResourceA40EDCAE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "MyTestFrontendMyTestFrontendbucketE6268FCD",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-123456789012-us-east-1",
        ],
        "SourceObjectKeys": [
          "0.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestFrontendMyTestFrontenddistributionCFDistributionE6F8BA69": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "myapp.example.com",
          ],
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "none",
                },
                "QueryString": false,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/index.html",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "none",
                },
                "QueryString": false,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/version.txt",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "none",
                },
                "QueryString": false,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/set-env.sh",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/ca-api/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/ca-apiws/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/a2a/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/register/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/login/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/attestation/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/assertion/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": {
                "Cookies": {
                  "Forward": "all",
                },
                "Headers": [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/query*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
            ],
            "CachedMethods": [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "MyTestFrontendMyTestFrontendbucketE6268FCD",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "MyTestFrontendMyTestFrontendoriginaccessidentity60A8D7A4",
                      },
                    ],
                  ],
                },
              },
            },
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 5,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": "myappapi.example.com",
              "Id": "origin2",
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "MyTestFrontendMyTestFrontendcertificateCertificateRequestorResource3D675D18",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MyTestFrontendMyTestFrontendoriginaccessidentity60A8D7A4": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Access bucket myapp.example.com only from Cloudfront",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
